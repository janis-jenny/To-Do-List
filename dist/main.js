(()=>{"use strict";const t=[];class e{constructor(t){this.name=t,this.container=document.querySelector(".render-name")}addProject(){t.push({name:this.name,tasks:[]})}renderProject(){this.container.textContent="",this.addProject();const e=t.map((e=>`<h2>${e.name}</h2>\n                                        <button class=".todo-btn" data-id=${t.indexOf(e)}>Add Task</button>`));this.container.insertAdjacentHTML("afterbegin",e),console.log(t)}}class o{constructor(t,e,o){this.title=t,this.description=e,this.date=o,this.todoList=document.getElementById("todo-list-container")}appendTodo(){const t=`<div class="todoCard">\n                      <div>${this.title}</div>\n                      <div>${this.description}</div>\n                      </div>`;this.todoList.insertAdjacentHTML("afterbegin",t)}addTodo(t,e){t.tasks.push(e)}renderTodo(){this.todoList.textContent="",this.appendTodo(),this.addTodo();const t=project.tasks.map((t=>`<div class="todoCard">\n                                                   <div>${t.title}</div>\n                                                   <div>${t.description}</div>\n                                                   </div>`));this.todoList.insertAdjacentHTML("afterbegin",t),console.log(tasks)}}document.querySelector("#new-project").addEventListener("click",(t=>{t.preventDefault();const o=document.querySelector(".project_name").value;new e(o).renderProject()})),document.querySelectorAll(".todo-btn").forEach((e=>{e.addEventListener("click",(e=>{const n=e.target.dataset.id,d=t[n],i=document.querySelector("#title").value,s=document.querySelector("#description").value;addTodo(d,{title:i,description:s}),new o(i,s).renderTodo()}))}))})();